<?php

namespace DistributionBundle\Repository;

use BeneficiaryBundle\Entity\Beneficiary;
use DistributionBundle\Entity\Assistance;
use DistributionBundle\Entity\GeneralReliefItem;
use Doctrine\ORM\Tools\Pagination\Paginator;
use NewApiBundle\InputType\GeneralReliefFilterInputType;
use NewApiBundle\Request\Pagination;

/**
 * GeneralReliefItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GeneralReliefItemRepository extends \Doctrine\ORM\EntityRepository
{
    public function countNonDistributed(Assistance $assistance)
    {
        $qb = $this->createQueryBuilder("gri");
        $q = $qb->select("COUNT(DISTINCT gri)")
            ->leftJoin("gri.assistanceBeneficiary", "db")
            ->leftJoin("db.assistance", "dd")
            ->where("dd = :distribution")
            ->setParameter("distribution", $assistance)
            ->andWhere("gri.distributedAt is NULL");

        return $q->getQuery()->getSingleScalarResult();
    }

    /**
     * @param Assistance $assistance
     * @param Beneficiary $beneficiary
     *
     * @return GeneralReliefItem[]
     */
    public function findByAssistanceBeneficiary(Assistance $assistance, Beneficiary $beneficiary)
    {
        $qbr = $this->createQueryBuilder('gri')
            ->join('gri.assistanceBeneficiary', 'ab')
            ->andWhere('ab.assistance = :assistance')
            ->andWhere('ab.beneficiary = :beneficiary')
            ->setParameter('assistance', $assistance)
            ->setParameter('beneficiary', $beneficiary);

        return $qbr->getQuery()->getResult();
    }

    /**
     * @param GeneralReliefFilterInputType $filter
     * @param Pagination|null              $pagination
     *
     * @return Paginator|GeneralReliefItem[]
     */
    public function findByParams(GeneralReliefFilterInputType $filter, ?Pagination $pagination = null): Paginator
    {
        $qbr = $this->createQueryBuilder('gri');

        if ($pagination) {
            $qbr->setMaxResults($pagination->getLimit())
                ->setFirstResult($pagination->getOffset());
        }

        if ($filter->hasIds()) {
            $qbr->andWhere('gri.id IN (:ids)')
                ->setParameter('ids', $filter->getIds());
        }

        return new Paginator($qbr);
    }
}
