<?php

namespace BeneficiaryBundle\Model\Vulnerability;

use BeneficiaryBundle\Exception\CsvParserException;
use BeneficiaryBundle\Model\AbstractCsvParser;

class ScoringParser extends AbstractCsvParser
{
    private const CONDITION_COLUMN = 'condition_enum';
    private const CONDITION_VALUE_COLUMN = 'value_of_condition';
    private const SCORE_COLUMN = 'score';

    /**
     * @param string $pathToCsv
     *
     * @return ScoringValueObject
     *
     * @throws CsvParserException
     */
    public function parse(string $pathToCsv): ScoringValueObject
    {
        $this->mandatoryColumns = [self::CONDITION_COLUMN, self::CONDITION_VALUE_COLUMN, self::SCORE_COLUMN];

        $csv = $this->readCsvToArray($pathToCsv);

        $scoringValueObject = new ScoringValueObject();

        foreach ($csv as $row) {
            if ($this->rowEmpty($row)) {
                continue;
            }

            $this->checkRow($row);

            $scoringValueObject->setScore($row[self::CONDITION_COLUMN], (int) $row[self::SCORE_COLUMN]);

            if (in_array($row[self::CONDITION_COLUMN], ConditionEnum::withValue())) {
                $scoringValueObject->setConditionValue($row[self::CONDITION_COLUMN], (int) $row[self::CONDITION_VALUE_COLUMN]);
            }
        }

        $scoringValueObject->validate();

        return $scoringValueObject;
    }

    /**
     * @param $row
     *
     * @throws CsvParserException
     */
    private function checkRow($row): void
    {
        if (!in_array($row[self::CONDITION_COLUMN], ConditionEnum::all())) {
            throw new CsvParserException('Unknown condition "'.$row[self::CONDITION_COLUMN].'"');
        }

        if (0 === strlen($row[self::SCORE_COLUMN])) {
            throw new CsvParserException('Missing score value for condition "'.$row[self::CONDITION_COLUMN].'"');
        }

        if (!is_numeric($row[self::SCORE_COLUMN])) {
            throw new CsvParserException('Bad format score value for condition "'.$row[self::CONDITION_COLUMN].'"');
        }

        if (in_array($row[self::CONDITION_COLUMN], ConditionEnum::withValue())) {
            if (0 === strlen($row[self::CONDITION_VALUE_COLUMN])) {
                throw new CsvParserException('Missing condition value for condition "'.$row[self::CONDITION_COLUMN].'"');
            }

            if (!is_numeric($row[self::CONDITION_VALUE_COLUMN])) {
                throw new CsvParserException('Bad format condition value for condition "'.$row[self::CONDITION_COLUMN].'"');
            }
        }
    }
}
