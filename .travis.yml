language: php
php:
  - '7.3.23'

# Allows use container-based infrastructure
sudo: false

addons:
  apt:
    packages:
      - pv

# Start mysql service
services:
  - mysql

# Cache composer packages so "composer install" is faster
cache:
  directories:
    - $HOME/.composer/cache/files

# Define an environment variable
env:
  global:
    - secure: "Muf2aF7bxezbo+IvNsrIw1IEyO1QlKFlCWDVEcAJmsTjv+WsDKuoSaZw4LNwOqf/+31LgkF3WzW3wuE6EsYajvWZp6/L0dwqihWH1x1XnywD0hJcUkGBKnaPEToWX6KhSBaDy2a6ZD2vSaWA+Hj+W9SjWshXA4eJRsY7pdHldlgOagVpxVsy6aGCh2lZ88UX14z16DuxvYjvo6S2Mz8fhPIKxMB029voLLycwngJ5/g+NUyrTYaCxE10x9F9LGQ2FG7z4D+ZYSVTY9R+Oz9TZogq+0qGQW31lxB2tsNARz8qFO3Ep6pk3+fSBYokdnBJoPLOwM/j2FC023lzT22cc2y9zouQKF04aqgJyNIk7mnhalpARSbcazOKc7Hq8e/uRGkieiRx68pU+e0JZzg5Wq5Lh2jm0TE50Z9llLjrr6EfLL5gYLblEEpES2Qh9P8d46MQATrv9nud7ya5UQrUNbcqPWRqJJvii8Rf/PKqHZewJ3OIoyejaZmdrmsEQWkYe51EPN/a+eZY1xa8cVOR9kGbMZudCFDhZ6HL1Ptr3YqoNykq6AYQSLq69B6eTu4EtQjc3HMSrMikRpZuVftLkfwmGVCl6V1GFRZjbJ8/4YDRcnq7CCzz7ojY64NSkMkrg13i9Y8ixV7/4muzwAdThwyhrSAx9cPq69e32Gf41IY="
  jobs:
    - SYMFONY_VERSION="3.4.*" DB=db_test

# Update composer
before_install:
  - composer self-update

jobs:
  include:
    - stage: test
      if: (NOT branch =~ /^release\/.*$/) AND tag IS NOT present
      install:
        - echo "extension=apcu.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
        - cp app/config/parameters.yml.travis app/config/parameters.yml
        - composer install
        - php bin/console doctrine:database:create --env=test
        - php bin/console doctrine:migrations:migrate -n --env=test
        - php bin/console doctrine:fixtures:load -n --env=dev
      script: ./vendor/bin/phpunit
      fast_finish: true
    - stage: deploy
      if: branch = develop AND NOT type = "pull_request"
      install:
        - openssl aes-256-cbc -K $encrypted_473c1532d197_key -iv $encrypted_473c1532d197_iv -in ec2_bms.enc -out ec2_bms.pem -d
        - chmod 400 ./ec2_bms.pem
      script: ./deploy.sh test true dev aggressive
    - stage: deploy
      if: tag IS present AND tag =~ /^deploy.*$/ AND NOT type = "pull_request"
      install:
        - openssl aes-256-cbc -K $encrypted_473c1532d197_key -iv $encrypted_473c1532d197_iv -in ec2_bms.enc -out ec2_bms.pem -d
        - chmod 400 ./ec2_bms.pem
      script: ./deploy.sh dev true dev aggressive
    - stage: deploy
      if: branch =~ /^release\/.*$/ AND NOT type = "pull_request"
      install:
        - openssl aes-256-cbc -K $encrypted_473c1532d197_key -iv $encrypted_473c1532d197_iv -in ec2_bms.enc -out ec2_bms.pem -d
        - chmod 400 ./ec2_bms.pem
      script: ./deploy.sh stage false false aggressive
    - stage: deploy
      if: tag IS present AND tag =~ /^v.*$/ AND NOT type = "pull_request"
      install:
        - openssl aes-256-cbc -K $encrypted_473c1532d197_key -iv $encrypted_473c1532d197_iv -in ec2_bms.enc -out ec2_bms.pem -d
        - chmod 400 ./ec2_bms.pem
      script: ./deploy.sh prod false false aggressive && ./deploy.sh demo false false aggressive
